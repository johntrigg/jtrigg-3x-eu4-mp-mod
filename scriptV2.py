import os
import shutil

# List of strings to search for
search_terms = [
    "land_morale",
    "infantry_power",
    "nation_designer_cost",
    "add_random_development",
    "add_adm_power",
    "add_dip_power",
    "add_mil_power",
    "add_years_of_income",
    "add_treasury",
    "add_inflation",
    "add_mercantilism",
    "add_tariff_value",
    "add_absolutism",
    "add_legitimacy",
    "add_republican_tradition",
    "add_scaled_republican_tradition",
    "add_devotion",
    "add_horde_unity",
    "add_meritocracy",
    "add_militarised_society",
    "add_revolutionary_zeal",
    "add_tribal_allegiance",
    "add_authority",
    "add_doom",
    "add_fervor",
    "add_karma",
    "add_church_power",
    "add_papal_influence",
    "add_reform_desire",
    "add_piety",
    "add_curia_treasury",
    "add_patriarch_authority",
    "add_harmony",
    "add_harmonization_progress",
    "add_isolationism",
    "add_prestige",
    "add_corruption",
    "add_splendor",
    "add_stability",
    "add_war_exhaustion",
    "add_liberty_desire",
    "add_army_tradition",
    "add_navy_tradition",
    "add_army_professionalism",
    "add_manpower",
    "add_sailors",
    "add_yearly_manpower",
    "add_yearly_sailors",
    "add_base_tax",
    "add_base_production",
    "add_base_manpower",
    "add_prosperity",
    "add_devastation",
    "add_local_autonomy",
    "add_nationalism",
    "add_unrest",
    "monthly_ottoman_decadence",
    "ottoman_decadence_gain_modifier",
    "add_base_production",
    "army_tradition",
    "army_tradition_decay",
    "army_tradition_from_battle",
    "yearly_army_professionalism",
    "drill_gain_modifier",
    "drill_decay_modifier",
    "infantry_cost",
    "infantry_fire",
    "infantry_shock",
    "cavalry_cost",
    "cavalry_power",
    "cavalry_fire",
    "cavalry_shock",
    "artillery_cost",
    "artillery_power",
    "artillery_fire",
    "artillery_shock",
    "cav_to_inf_ratio",
    "cavalry_flanking",
    "artillery_levels_available_vs_fort",
    "artillery_level_modifier",
    "backrow_artillery_damage",
    "discipline",
    "land_morale_constant",
    "movement_speed",
    "fire_damage",
    "fire_damage_received",
    "shock_damage",
    "shock_damage_received",
    "morale_damage",
    "morale_damage_received",
    "recover_army_morale_speed",
    "reserves_organisation",
    "land_attrition",
    "reinforce_cost_modifier",
    "reinforce_speed",
    "manpower_recovery_speed",
    "global_manpower",
    "global_manpower_modifier",
    "global_regiment_cost",
    "global_regiment_recruit_speed",
    "global_supply_limit_modifier",
    "land_forcelimit",
    "land_forcelimit_modifier",
    "land_maintenance_modifier",
    "possible_condottieri",
    "hostile_attrition",
    "max_hostile_attrition",
    "siege_ability",
    "artillery_barrage_cost",
    "assault_fort_cost_modifier",
    "assault_fort_ability",
    "defensiveness",
    "garrison_size",
    "global_garrison_growth",
    "garrison_damage",
    "fort_maintenance_modifier",
    "rival_border_fort_maintenance",
    "war_exhaustion_cost",
    "leader_land_fire",
    "leader_land_manuever",
    "leader_land_shock",
    "leader_siege",
    "max_general_fire",
    "max_general_maneuver",
    "max_general_shock",
    "max_general_siege",
    "general_cost",
    "free_leader_pool",
    "free_land_leader_pool",
    "free_navy_leader_pool",
    "raze_power_gain",
    "loot_amount",
    "available_province_loot",
    "prestige_from_land",
    "war_taxes_cost_modifier",
    "leader_cost",
    "manpower_in_true_faith_provinces",
    "regiment_manpower_usage",
    "military_tactics",
    "global_attacker_dice_roll_bonus",
    "global_defender_dice_roll_bonus",
    "own_territory_dice_roll_bonus",
    "manpower_in_accepted_culture_provinces",
    "manpower_in_culture_group_provinces",
    "manpower_in_own_culture_provinces",
    "attack_bonus_in_capital_terrain",
    "warscore_from_battles_modifier",
    "mercenary_cost",
    "merc_maintenance_modifier",
    "mercenary_discipline",
    "mercenary_manpower",
    "merc_leader_army_tradition",
    "allow_mercenaries_to_split",
    "special_unit_forcelimit",
    "special_unit_cost_modifier",
    "special_unit_manpower_cost_modifier",
    "allowed_marine_fraction",
    "amount_of_banners",
    "amount_of_cawa",
    "cawa_cost_modifier",
    "amount_of_carolean",
    "amount_of_hussars",
    "hussars_cost_modifier",
    "janissary_cost_modifier",
    "allowed_streltsy_fraction",
    "amount_of_streltsy",
    "allowed_tercio_fraction",
    "amount_of_tercio",
    "allowed_samurai_fraction",
    "amount_of_samurai",
    "allowed_musketeer_fraction",
    "amount_of_musketeers",
    "navy_tradition",
    "navy_tradition_decay",
    "naval_tradition_from_battle",
    "naval_tradition_from_trade",
    "heavy_ship_cost",
    "heavy_ship_power",
    "light_ship_cost",
    "light_ship_power",
    "galley_cost",
    "galley_power",
    "transport_cost",
    "transport_power",
    "global_ship_cost",
    "global_ship_recruit_speed",
    "global_ship_repair",
    "naval_forcelimit",
    "naval_forcelimit_modifier",
    "naval_maintenance_modifier",
    "global_sailors",
    "global_sailors_modifier",
    "sailor_maintenance_modifer",
    "sailors_recovery_speed",
    "blockade_efficiency",
    "siege_blockade_progress",
    "capture_ship_chance",
    "global_naval_engagement_modifier",
    "global_naval_engagement",
    "naval_attrition",
    "naval_morale",
    "naval_morale_constant",
    "naval_morale_damage",
    "naval_morale_damage_received",
    "ship_durability",
    "sunk_ship_morale_hit_recieved",
    "recover_navy_morale_speed",
    "prestige_from_naval",
    "leader_naval_fire",
    "leader_naval_manuever",
    "leader_naval_shock",
    "max_admiral_fire",
    "max_admiral_maneuver",
    "max_admiral_shock",
    "max_admiral_siege",
    "own_coast_naval_combat_bonus",
    "admiral_cost",
    "global_naval_barrage_cost",
    "flagship_cost",
    "disengagement_chance",
    "transport_attrition",
    "landing_penalty",
    "regiment_disembark_speed",
    "coast_raid_range",
    "movement_speed_in_fleet_modifier",
    "max_flagships",
    "number_of_cannons",
    "number_of_cannons_modifier",
    "heavy_ship_number_of_cannons_modifier",
    "light_ship_number_of_cannons_modifier",
    "galley_number_of_cannons_modifier",
    "transport_number_of_cannons_modifier",
    "hull_size",
    "hull_size_modifier",
    "heavy_ship_hull_size_modifier",
    "light_ship_hull_size_modifier",
    "galley_hull_size_modifier",
    "transport_hull_size_modifier",
    "engagement_cost",
    "power_modifier",
    "engagement_cost_modifier",
    "ship_trade_power",
    "ship_trade_power_modifier",
    "can_transport_units",
    "admiral_skill_gain_modifier",
    "flagship_durability",
    "flagship_morale",
    "flagship_naval_engagement_modifier",
    "movement_speed_onto_off_boat_modifier",
    "flagship_landing_penalty",
    "number_of_cannons_flagship_modifier",
    "number_of_cannons_flagship",
    "naval_maintenance_flagship_modifier",
    "trade_power_in_fleet_modifier",
    "morale_in_fleet_modifier",
    "blockade_impact_on_siege_in_fleet_modifier",
    "exploration_mission_range_in_fleet_modifier",
    "barrage_cost_in_fleet_modifier",
    "naval_attrition_in_fleet_modifier",
    "privateering_efficiency_in_fleet_modifier",
    "prestige_from_battles_in_fleet_modifier",
    "naval_tradition_in_fleet_modifier",
    "cannons_for_hunting_pirates_in_fleet",
    "allowed_geobukseon_fraction",
    "amount_of_geobukseon",
    "allowed_galleass_fraction",
    "amount_of_galleass",
    "allowed_voc_indiamen_fraction",
    "amount_of_voc_indiamen",
    "allowed_man_of_war_fraction",
    "amount_of_man_of_war",
    "allowed_galleon_fraction",
    "amount_of_galleon",
    "allowed_caravel_fraction",
    "amount_of_caravel",
    "diplomats",
    "diplomatic_reputation",
    "diplomatic_upkeep",
    "envoy_travel_time",
    "improve_relation_modifier",
    "ae_impact",
    "diplomatic_annexation_cost",
    "province_warscore_cost",
    "unjustified_demands",
    "rival_change_cost",
    "justify_trade_conflict_cost",
    "stability_cost_to_declare_war",
    "accept_vassalization_reasons",
    "transfer_trade_power_reasons",
    "monthly_federation_favor_growth",
    "monthly_favor_modifier",
    "can_fabricate_for_vassals",
    "global_tax_income",
    "global_tax_modifier",
    "production_efficiency",
    "state_maintenance_modifier",
    "inflation_action_cost",
    "inflation_reduction",
    "monthly_gold_inflation_modifier",
    "gold_depletion_chance_modifier",
    "interest",
    "development_cost",
    "development_cost_in_primary_culture",
    "development_cost_modifier",
    "tribal_development_growth",
    "add_tribal_land_cost",
    "settle_cost",
    "global_allowed_num_of_buildings",
    "global_allowed_num_of_manufactories",
    "build_time",
    "great_project_upgrade_cost",
    "great_project_upgrade_time",
    "global_monthly_devastation",
    "global_prosperity_growth",
    "administrative_efficiency",
    "expand_infrastructure_cost_modifier",
    "centralize_state_cost",
    "core_creation",
    "core_decay_on_your_own",
    "enemy_core_creation",
    "ignore_coring_distance",
    "adm_tech_cost_modifier",
    "dip_tech_cost_modifier",
    "mil_tech_cost_modifier",
    "technology_cost",
    "idea_cost",
    "embracement_cost",
    "global_institution_spread",
    "institution_spread_from_true_faith",
    "native_advancement_cost",
    "all_power_cost",
    "innovativeness_gain",
    "yearly_innovativeness",
    "free_adm_policy",
    "free_dip_policy",
    "free_mil_policy",
    "possible_adm_policy",
    "possible_dip_policy",
    "possible_mil_policy",
    "possible_policy",
    "free_policy",
    "country_admin_power",
    "country_diplomatic_power",
    "country_military_power",
    "prestige",
    "prestige_decay",
    "monthly_splendor",
    "yearly_corruption",
    "advisor_cost",
    "same_culture_advisor_cost",
    "same_religion_advisor_cost",
    "advisor_pool",
    "female_advisor_chance",
    "heir_chance",
    "monthly_heir_claim_increase",
    "monthly_heir_claim_increase_modifier",
    "monarch_admin_power",
    "monarch_diplomatic_power",
    "monarch_military_power",
    "adm_advisor_cost",
    "dip_advisor_cost",
    "mil_advisor_cost",
    "monthly_support_heir_gain",
    "power_projection_from_insults",
    "monarch_lifespan",
    "local_heir_adm",
    "local_heir_dip",
    "local_heir_mil",
    "national_focus_years",
    "yearly_absolutism",
    "max_absolutism",
    "max_absolutism_effect",
    "legitimacy",
    "republican_tradition",
    "devotion",
    "horde_unity",
    "meritocracy",
    "russian_modernization_gain_modifier",
    "monthly_militarized_society",
    "monthly_russian_modernization",
    "monthly_militarized_society",
    "yearly_government_power",
    "temples_influence",
    "enuchs_influence",
    "bureaucrats_influence",
    "mr_aristocrats_influence",
    "mr_traders_influence",
    "mr_guilds_influence",
    "rr_royalists_influence",
    "rr_girondists_influence",
    "pr_buccaneers_influence",
    "pr_smugglers_influence",
    "pr_captains_influence",
    "imperial_mandate",
    "election_cycle",
    "candidate_random_bonus",
    "reelection_cost",
    "max_terms",
    "governing_capacity",
    "governing_capacity_modifier",
    "governing_cost",
    "state_governing_cost",
    "territories_governing_cost",
    "trade_company_governing_cost",
    "state_governing_cost_increase",
    "expand_administration_cost",
    "yearly_revolutionary_zeal",
    "max_revolutionary_zeal",
    "reform_progress_growth",
    "monthly_reform_progress",
    "monthly_reform_progress_modifier",
    "move_capital_cost_modifier",
    "parliament_backing_chance",
    "parliament_effect_duration",
    "parliament_debate_duration",
    "parliament_chance_of_decision",
    "num_of_parliament_issues",
    "max_possible_parliament_seats",
    "church_loyalty_modifier",
    "brahmins_loyalty_modifier",
    "maratha_loyalty_modifier",
    "nobility_loyalty_modifier",
    "vaisyas_loyalty_modifier",
    "burghers_loyalty_modifier",
    "cossacks_loyalty_modifier",
    "nomadic_tribes_loyalty_modifier",
    "dhimmi_loyalty_modifier",
    "jains_loyalty_modifier",
    "janissaries_loyalty_modifier",
    "eunuchs_loyalty_modifier",
    "rajput_loyalty_modifier",
    "church_privilege_slots",
    "brahmins_privilege_slots",
    "maratha_privilege_slots",
    "nobility_privilege_slots",
    "vaisyas_privilege_slots",
    "burghers_privilege_slots",
    "cossacks_privilege_slots",
    "nomadic_privilege_slots",
    "dhimmi_privilege_slots",
    "jains_privilege_slots",
    "janissaries_privilege_slots",
    "eunuchs_privilege_slots",
    "rajput_privilege_slots",
    "all_estate_loyalty_equilibrium",
    "all_estate_possible_privileges",
    "loyalty_change_on_revoked",
    "estate_interaction_cooldown_modifier",
    "imperial_authority",
    "imperial_authority_value",
    "free_city_imperial_authority",
    "reasons_to_elect",
    "imperial_mercenary_cost",
    "max_free_cities",
    "max_electors",
    "legitimate_subject_elector",
    "manpower_against_imperial_enemies",
    "imperial_reform_catholic_approval",
    "culture_conversion_cost",
    "culture_conversion_time",
    "num_accepted_cultures",
    "promote_culture_cost",
    "relation_with_same_culture",
    "relation_with_same_culture_group",
    "relation_with_accepted_culture",
    "relation_with_other_culture",
    "global_unrest",
    "stability_cost_modifier",
    "global_autonomy",
    "min_autonomy",
    "autonomy_change_time",
    "harsh_treatment_cost",
    "global_rebel_suppression_efficiency",
    "years_of_nationalism",
    "min_autonomy_in_territories",
    "unrest_catholic_provinces",
    "overextension_impact_modifier",
    "vassal_forcelimit_bonus",
    "vassal_naval_forcelimit_bonus",
    "vassal_manpower_bonus",
    "vassal_sailors_bonus",
    "vassal_income",
    "overlord_naval_forcelimit",
    "overlord_naval_forcelimit_modifier",
    "liberty_desire",
    "liberty_desire_from_subject_development",
    "reduced_liberty_desire",
    "reduced_liberty_desire_on_same_continent",
    "reduced_liberty_desire_on_other_continent",
    "colonial_type_change_cost_modifier",
    "colonial_subject_type_upgrade_cost_modifier",
    "years_to_integrate_personal_union",
    "chance_to_inherit",
    "monarch_power_tribute",
    "tributary_conversion_cost_modifier",
    "annexation_relations_impact",
    "spy_offence",
    "global_spy_defence",
    "fabricate_claims_cost",
    "claim_duration",
    "discovered_relations_impact",
    "rebel_support_efficiency",
    "spy_action_cost_modifier",
    "global_missionary_strength",
    "global_heretic_missionary_strength",
    "global_heathen_missionary_strength",
    "missionaries",
    "missionary_maintenance_cost",
    "religious_unity",
    "tolerance_own",
    "tolerance_heretic",
    "tolerance_heathen",
    "tolerance_of_heretics_capacity",
    "tolerance_of_heathens_capacity",
    "papal_influence",
    "papal_influence_from_cardinals",
    "appoint_cardinal_cost",
    "curia_treasury_contribution",
    "curia_powers_cost",
    "monthly_church_power",
    "church_power_modifier",
    "monthly_fervor_increase",
    "yearly_patriarch_authority",
    "monthly_piety",
    "monthly_piety_accelerator",
    "harmonization_speed",
    "yearly_harmony",
    "monthly_karma",
    "monthly_karma_accelerator",
    "yearly_karma_decay",
    "yearly_doom_reduction",
    "yearly_authority",
    "enforce_religion_cost",
    "prestige_per_development_from_conversion",
    "warscore_cost_vs_other_religion",
    "establish_order_cost",
    "global_religious_conversion_resistance",
    "relation_with_same_religion",
    "reverse_relation_with_same_religion",
    "relation_with_heretics",
    "relation_with_heathens",
    "colonists",
    "colonist_placement_chance",
    "global_colonial_growth",
    "colony_cost_modifier",
    "range",
    "native_uprising_chance",
    "native_assimilation",
    "migration_cost",
    "global_tariffs",
    "treasure_fleet_income",
    "expel_minorities_cost",
    "colony_development_boost",
    "caravan_power",
    "merchants",
    "placed_merchant_power",
    "placed_merchant_power_modifier",
    "global_trade_power",
    "global_foreign_trade_power",
    "global_own_trade_power",
    "global_prov_trade_power_modifier",
    "global_trade_goods_size_modifier",
    "global_trade_goods_size",
    "trade_efficiency",
    "trade_range_modifier",
    "trade_steering",
    "global_ship_trade_power",
    "privateer_efficiency",
    "embargo_efficiency",
    "ship_power_propagation",
    "center_of_trade_upgrade_cost",
    "trade_company_investment_cost",
    "mercantilism_cost",
    "reduced_trade_penalty_on_non_main_tradenode",
    "max_attrition",
    "attrition",
    "local_hostile_attrition",
    "local_attacker_dice_roll_bonus",
    "local_defender_dice_roll_bonus",
    "fort_level",
    "garrison_growth",
    "local_defensiveness",
    "local_fort_maintenance_modifier",
    "local_garrison_size",
    "local_garrison_damage",
    "local_assault_fort_cost_modifier",
    "local_assault_fort_ability",
    "local_friendly_movement_speed",
    "local_hostile_movement_speed",
    "local_manpower",
    "local_manpower_modifier",
    "local_regiment_cost",
    "regiment_recruit_speed",
    "supply_limit",
    "supply_limit_modifier",
    "local_own_coast_naval_combat_bonus",
    "local_amount_of_banners",
    "local_amount_of_cawa",
    "local_amount_of_carolean",
    "local_amount_of_hussars",
    "local_naval_engagement_modifier",
    "local_sailors",
    "local_sailors_modifier",
    "local_ship_cost",
    "local_ship_repair",
    "ship_recruit_speed",
    "blockade_force_required",
    "hostile_disembark_speed",
    "hostile_fleet_attrition",
    "block_slave_raid",
    "local_warscore_cost_modifier",
    "inflation_reduction_local",
    "local_state_maintenance_modifier",
    "local_build_cost",
    "build_cost",
    "local_build_time",
    "local_great_project_upgrade_cost",
    "local_great_project_upgrade_time",
    "local_monthly_devastation",
    "local_prosperity_growth",
    "local_production_efficiency",
    "local_tax_modifier",
    "tax_income",
    "allowed_num_of_buildings",
    "allowed_num_of_manufactories",
    "local_development_cost",
    "local_development_cost_modifier",
    "local_gold_depletion_chance_modifier",
    "local_institution_spread",
    "local_core_creation",
    "local_governing_cost",
    "statewide_governing_cost",
    "local_governing_cost_increase",
    "local_centralize_state_cost",
    "institution_growth",
    "local_culture_conversion_cost",
    "local_culture_conversion_time",
    "local_unrest",
    "local_autonomy",
    "local_years_of_nationalism",
    "min_local_autonomy",
    "local_missionary_strength",
    "local_religious_unity_contribution",
    "local_missionary_maintenance_cost",
    "local_religious_conversion_resistance",
    "local_tolerance_of_heretics",
    "local_tolerance_of_heathens",
    "local_colonial_growth",
    "local_colonist_placement_chance",
    "local_colony_cost_modifier",
    "province_trade_power_modifier",
    "province_trade_power_value",
    "trade_goods_size_modifier",
    "trade_goods_size",
    "trade_value_modifier",
    "trade_value",
    "local_center_of_trade_upgrade_cost"
]

modifyTheseFiles = [
    # r'C:\Program Files (x86)\Steam\steamapps\common\Europa Universalis IV\common\advisortypes',
    r'c:\Program Files (x86)\Steam\steamapps\common\Europa Universalis IV\common\ages',
    r'C:\Program Files (x86)\Steam\steamapps\common\Europa Universalis IV\common\centers_of_trade',
    r'C:\Program Files (x86)\Steam\steamapps\common\Europa Universalis IV\common\church_aspects',
    r'C:\Program Files (x86)\Steam\steamapps\common\Europa Universalis IV\common\countries',
    r'C:\Program Files (x86)\Steam\steamapps\common\Europa Universalis IV\common\custom_ideas',
    r'c:\Program Files (x86)\Steam\steamapps\common\Europa Universalis IV\common\decrees',
    r'C:\Program Files (x86)\Steam\steamapps\common\Europa Universalis IV\common\defender_of_faith',
    r'C:\Program Files (x86)\Steam\steamapps\common\Europa Universalis IV\common\estate_privileges',
    r'C:\Program Files (x86)\Steam\steamapps\common\Europa Universalis IV\common\estates',
    r'C:\Program Files (x86)\Steam\steamapps\common\Europa Universalis IV\common\event_modifiers',
    r'C:\Program Files (x86)\Steam\steamapps\common\Europa Universalis IV\common\fervor',
    r'c:\Program Files (x86)\Steam\steamapps\common\Europa Universalis IV\common\fervor',
    r'C:\Program Files (x86)\Steam\steamapps\common\Europa Universalis IV\common\fetishist_cults',
    r'c:\Program Files (x86)\Steam\steamapps\common\Europa Universalis IV\common\fetishist_cults',
    r'C:\Program Files (x86)\Steam\steamapps\common\Europa Universalis IV\common\flagship_modifications',
    r'C:\Program Files (x86)\Steam\steamapps\common\Europa Universalis IV\common\golden_bulls',
    r'C:\Program Files (x86)\Steam\steamapps\common\Europa Universalis IV\common\government_mechanics',
    r'C:\Program Files (x86)\Steam\steamapps\common\Europa Universalis IV\common\governments',
    r'C:\Program Files (x86)\Steam\steamapps\common\Europa Universalis IV\common\government_reforms',
    r'c:\Program Files (x86)\Steam\steamapps\common\Europa Universalis IV\common\government_reforms',
    r'C:\Program Files (x86)\Steam\steamapps\common\Europa Universalis IV\common\government_ranks',
    r'C:\Program Files (x86)\Steam\steamapps\common\Europa Universalis IV\common\great_projects',
    r'C:\Program Files (x86)\Steam\steamapps\common\Europa Universalis IV\common\hegemons',
    r'C:\Program Files (x86)\Steam\steamapps\common\Europa Universalis IV\common\holy_orders',
    r'C:\Program Files (x86)\Steam\steamapps\common\Europa Universalis IV\common\imperial_reforms',
    r'C:\Program Files (x86)\Steam\steamapps\common\Europa Universalis IV\common\institutions',
    r'c:\Program Files (x86)\Steam\steamapps\common\Europa Universalis IV\common\institutions',
    r'C:\Program Files (x86)\Steam\steamapps\common\Europa Universalis IV\common\ideas',
    r'c:\Program Files (x86)\Steam\steamapps\common\Europa Universalis IV\missions',
    r'C:\Program Files (x86)\Steam\steamapps\common\Europa Universalis IV\common\naval_doctrines',
    r'C:\Program Files (x86)\Steam\steamapps\common\Europa Universalis IV\common\parliament_issues',
    r'C:\Program Files (x86)\Steam\steamapps\common\Europa Universalis IV\common\personal_deities',
    r'C:\Program Files (x86)\Steam\steamapps\common\Europa Universalis IV\common\policies',
    r'C:\Program Files (x86)\Steam\steamapps\common\Europa Universalis IV\common\powerprojection',
    r'C:\Program Files (x86)\Steam\steamapps\common\Europa Universalis IV\common\professionalism',
    r'C:\Program Files (x86)\Steam\steamapps\common\Europa Universalis IV\common\province_triggered_modifiers',
    r'C:\Program Files (x86)\Steam\steamapps\common\Europa Universalis IV\common\religions',
    r'C:\Program Files (x86)\Steam\steamapps\common\Europa Universalis IV\common\religious_reforms',
    r'C:\Program Files (x86)\Steam\steamapps\common\Europa Universalis IV\common\ruler_personalities',
    r'C:\Program Files (x86)\Steam\steamapps\common\Europa Universalis IV\common\subject_type_upgrades',
    r'C:\Program Files (x86)\Steam\steamapps\common\Europa Universalis IV\common\triggered_modifiers',
    r'C:\Program Files (x86)\Steam\steamapps\common\Europa Universalis IV\common\trading_policies',
    r'C:\Program Files (x86)\Steam\steamapps\common\Europa Universalis IV\common\tradegoods',
    r'C:\Program Files (x86)\Steam\steamapps\common\Europa Universalis IV\common\factions'
]

# Flag to determine if the original file should be modified
modifyOriginal = True

# Process each directory in the list
for directory in modifyTheseFiles:
    # Ensure the directory exists
    if os.path.exists(directory) and os.path.isdir(directory):
        # Iterate over all files in the directory
        for filename in os.listdir(directory):
            # Check if the file is a .txt file
            if filename.endswith('.txt'):
                file_path = os.path.join(directory, filename)
                
                # Read the content of the file
                with open(file_path, 'r') as file:
                    content = file.readlines()

                # Modify the required lines
                for i, line in enumerate(content):
                    for term in search_terms:
                        if term in line:
                            try:
                                # Split line by '=' to separate key and value, handle comments
                                parts = line.split('=')
                                if len(parts) >= 2:
                                    # Handle comments
                                    value_part = parts[1].split('#')[0].strip()
                                    value = float(value_part)
                                    # Tripling the value and rounding to two decimal places
                                    new_value = round(value * 3, 2)
                                    # Replacing the value in the line, preserving comments
                                    comment = '#' + parts[1].split('#')[1] if '#' in parts[1] else ''
                                    content[i] = f'{parts[0]}= {new_value} {comment}\n'
                            except ValueError:
                                # If the value is not a float, do nothing
                                pass
                            except Exception as e:
                                # Print the modifier and file that caused the issue
                                print(f"Error processing term '{term}' in file '{file_path}': {e}")

                # Creating the output file name
                output_filename = f'{os.path.splitext(filename)[0]}Modified3TimesModifiers.txt'
                output_path = os.path.join(directory, output_filename)
                
                # Writing the modified lines to the new file
                with open(output_path, 'w') as file:
                    file.writelines(content)

                # Replace the original file with the modified version if the flag is set
                if modifyOriginal:
                    shutil.move(output_path, file_path)
                else:
                    shutil.copy(output_path, os.path.join(directory, 'output.txt'))

print("The values have been updated successfully in all .txt files in the specified directories.")
